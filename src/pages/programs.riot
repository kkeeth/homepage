<programs>
  <div class="programs">
    <!-- Page Header with Rain -->
    <section class="page-header">
      <div class="header-bg">
        <!-- Rain Animation -->
        <div class="rain-container">
          <div class="raindrop" each={i in Array(8)} style="left: {Math.random() * 100}%; animation-delay: {Math.random() * 3}s;"></div>
        </div>

        <!-- Cozy Elements -->
        <div class="umbrella-element">â˜‚</div>
        <div class="music-note-1">â™ª</div>
        <div class="music-note-2">â™«</div>
        <div class="coffee-steam"></div>
      </div>

      <div class="container">
        <div class="header-content">
          <h1 class="page-title">{t("hero.title")}</h1>
          <p class="page-description" html={t("pages.program.description")}>
          </p>
          <div class="header-stats">
            <div class="stat">
              <div class="stat-number">ï¼”</div>
              <div class="stat-label">ã‚·ãƒ¼ã‚ºãƒ³</div>
            </div>
            <div class="stat">
              <div class="stat-number">{state.totalCount}</div>
              <div class="stat-label">ã‚¨ãƒ”ã‚½ãƒ¼ãƒ‰</div>
            </div>
            <div class="stat">
              <div class="stat-number">é€±ï¼‘å›ž</div>
              <div class="stat-label">æ›´æ–°</div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="episodes-section">
      <div class="section-content">
        <div class="section-header-casual">
          <h2 class="section-title">
            <span class="title-doodle">ðŸŽ§</span>
            å…¨ã‚¨ãƒ”ã‚½ãƒ¼ãƒ‰
          </h2>
          <div class="title-underline"></div>
        </div>

        <program-card program-episodes={state.programEpisodes} show-more={false} />

        <pagination
          current-page={state.currentPage}
          page-size={state.pageSize}
          total-count={state.totalCount}
          on-page-change={(page) => handlePageChange(page)}
        />
      </div>
    </section>
  </div>

  <script>
    import episodeStore from '@/stores/episode-store';

    export default {
      state: {
        programEpisodes: [],
        displayedCount: 0,
        totalCount: 0,
        currentPage: 1,
        pageSize: 6
      },
      async onBeforeMount() {
        this.handleEpisodesLoaded = () => {
          this.update({
            programEpisodes: episodeStore.getDisplayedEpisodes(),
            displayedCount: episodeStore.getDisplayedCount(),
            totalCount: episodeStore.getTotalCount(),
            currentPage: episodeStore.getCurrentPage(),
            pageSize: episodeStore.getPageSize()
          });
        };

        this.handleEpisodesUpdated = () => {
          this.update({
            programEpisodes: episodeStore.getDisplayedEpisodes(),
            displayedCount: episodeStore.getDisplayedCount(),
            currentPage: episodeStore.getCurrentPage(),
            pageSize: episodeStore.getPageSize()
          });
        };

        this.handlePageChange = (page) => {
          episodeStore.setPage(page);
        };

        episodeStore.on('episodes-loaded', this.handleEpisodesLoaded);
        episodeStore.on('episodes-updated', this.handleEpisodesUpdated);

        await episodeStore.loadAllEpisodes();
      },

      onBeforeUnmount() {
        episodeStore.off('episodes-loaded', this.handleEpisodesLoaded);
        episodeStore.off('episodes-updated', this.handleEpisodesUpdated);
      }
    }
  </script>
  <style>
    .programs {
      min-height: 100vh;
    }

    .page-header {
      position: relative;
      padding: 6rem 0;
      background: var(--hero-gradient);
      overflow: hidden;
      color: var(--warm-white);
    }

    .header-bg {
      position: absolute;
      inset: 0;
      pointer-events: none;
    }

    /* Rain Animation */
    .rain-container {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    .raindrop {
      position: absolute;
      top: -10px;
      width: 2px;
      height: 20px;
      background: linear-gradient(to bottom, var(--rain-blue), transparent);
      border-radius: 0 0 50% 50%;
      animation: falling-rain 3s linear infinite;
      opacity: 0.6;
    }

    /* Cozy Elements */
    .umbrella-element {
      position: absolute;
      top: 20%;
      right: 15%;
      font-size: 3rem;
      color: var(--umbrella-red);
      animation: gentle-sway 4s ease-in-out infinite;
      opacity: 0.4;
    }

    .music-note-1 {
      position: absolute;
      top: 30%;
      left: 10%;
      font-size: 2rem;
      color: var(--warm-amber);
      animation: float-notes 3s ease-in-out infinite;
      opacity: 0.3;
    }

    .music-note-2 {
      position: absolute;
      bottom: 25%;
      right: 25%;
      font-size: 1.5rem;
      color: var(--soft-teal);
      animation: float-notes 3s ease-in-out infinite 1.5s;
      opacity: 0.3;
    }

    .coffee-steam {
      position: absolute;
      bottom: 20%;
      left: 20%;
      width: 30px;
      height: 40px;
      opacity: 0.2;
    }

    .coffee-steam::before,
    .coffee-steam::after {
      content: '';
      position: absolute;
      width: 3px;
      height: 15px;
      background: var(--warm-amber);
      border-radius: 50%;
      animation: steam-rise 2s ease-in-out infinite;
    }

    .coffee-steam::before {
      left: 8px;
      animation-delay: 0s;
    }

    .coffee-steam::after {
      left: 15px;
      animation-delay: 0.5s;
    }

    .header-content {
      text-align: center;
      position: relative;
      z-index: 10;
    }

    .page-title {
      font-size: 3rem;
      font-weight: bold;
      margin-bottom: 1.5rem;
    }

    .page-description {
      font-size: 1.2rem;
      color: var(--white-90);
      line-height: 1.6;
      margin-bottom: 2.5rem;
      margin-left: auto;
      margin-right: auto;
      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    }

    .header-stats {
      display: flex;
      justify-content: center;
      gap: 3rem;
    }

    .stat {
      text-align: center;
      background: var(--white-20);
      padding: 1.5rem;
      border-radius: 1rem;
      backdrop-filter: blur(10px);
      border: 1px solid var(--white-20);
    }

    .stat-number {
      font-size: 2.2rem;
      font-weight: 800;
      color: var(--warm-white);
      display: block;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .stat-label {
      font-size: 0.9rem;
      color: var(--white-80);
      margin-top: 0.5rem;
    }

    .featured-program {
      padding: 4rem;
      background: white;
    }

    .featured-content {
      display: grid;
      grid-template-columns: 1fr 1.5fr;
      gap: 4rem;
      align-items: center;
    }

    .program-artwork {
      position: relative;
    }

    .artwork-image {
      width: 100%;
      max-width: 300px;
      height: auto;
      border-radius: 1rem;
      box-shadow: 0 10px 40px rgba(0,0,0,0.15);
    }

    .program-badge {
      display: inline-block;
      padding: 0.5rem 1rem;
      border-radius: 2rem;
      font-size: 0.875rem;
      font-weight: 600;
      margin-bottom: 1rem;
    }

    .program-badge.main {
      background: var(--mint-gradient);
      color: white;
    }

    .featured-title {
      font-size: 2.5rem;
      font-weight: bold;
      color: var(--navy-800);
      margin-bottom: 1.5rem;
    }

    .featured-description {
      font-size: 1.125rem;
      color: var(--navy-600);
      line-height: 1.6;
      margin-bottom: 2rem;
    }

    .program-meta {
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem;
      margin-bottom: 2.5rem;
    }

    .meta-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--navy-600);
      font-size: 0.875rem;
    }

    .featured-actions {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }

    .section-header {
      text-align: center;
      margin-bottom: 3rem;
    }

    .section-header h2 {
      font-size: 2.5rem;
      font-weight: bold;
      color: var(--navy-800);
      margin-bottom: 1rem;
    }

    .section-header p {
      font-size: 1.125rem;
      color: var(--navy-600);
    }

    .programs-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 2rem;
    }

    .card-header {
      padding: 1.5rem 1.5rem 0;
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
    }

    .card-icon {
      width: 3rem;
      height: 3rem;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
      color: white;
    }

    .card-header.pink .card-icon { background: var(--pink-400); }
    .card-header.blue .card-icon { background: var(--blue-400); }
    .card-header.purple .card-icon { background: var(--purple-400); }
    .card-header.yellow .card-icon { background: var(--yellow-400); }

    .status-badge {
      padding: 0.25rem 0.75rem;
      border-radius: 1rem;
      font-size: 0.75rem;
      font-weight: 500;
    }

    .status-badge.active {
      background: var(--mint-100);
      color: var(--mint-700);
    }

    .status-badge.hiatus {
      background: var(--navy-100);
      color: var(--navy-600);
    }

    .card-content {
      padding: 1.5rem;
    }

    .card-title {
      font-size: 1.25rem;
      font-weight: bold;
      color: var(--navy-800);
      margin-bottom: 0.75rem;
    }

    .card-description {
      color: var(--navy-600);
      line-height: 1.5;
      margin-bottom: 1.5rem;
    }

    .card-meta {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      margin-bottom: 1.5rem;
    }

    .meta-row {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--navy-500);
      font-size: 0.875rem;
    }

    .recent-episode {
      background: var(--mint-50);
      padding: 1rem;
      border-radius: 0.5rem;
      margin-bottom: 1.5rem;
    }

    .episode-label {
      font-size: 0.75rem;
      color: var(--mint-700);
      font-weight: 600;
      margin-bottom: 0.25rem;
    }

    .episode-title {
      font-weight: 600;
      color: var(--navy-800);
      margin-bottom: 0.25rem;
    }

    .episode-date {
      font-size: 0.875rem;
      color: var(--navy-500);
    }

    .card-actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .community-program {
      padding: 4rem 0;
      background: white;
    }

    .community-card {
      background: linear-gradient(135deg, var(--mint-500), var(--mint-600));
      border-radius: 1.5rem;
      padding: 3rem;
      color: white;
    }

    .community-header {
      display: flex;
      align-items: center;
      gap: 1.5rem;
      margin-bottom: 2rem;
    }

    .community-icon {
      width: 4rem;
      height: 4rem;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
    }

    .community-title h2 {
      font-size: 2rem;
      font-weight: bold;
      margin-bottom: 0.5rem;
    }

    .community-title p {
      opacity: 0.9;
    }

    .community-content {
      display: grid;
      grid-template-columns: 1.5fr 1fr;
      gap: 3rem;
      align-items: center;
    }

    .community-info h3 {
      font-size: 1.5rem;
      font-weight: bold;
      margin-bottom: 1rem;
    }

    .community-description {
      font-size: 1.125rem;
      line-height: 1.6;
      opacity: 0.9;
      margin-bottom: 2rem;
    }

    .community-features {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .feature {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      font-weight: 500;
    }

    .community-actions {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }

    .community-visual {
      display: flex;
      justify-content: center;
    }

    .participation-stats {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .stat-circle {
      width: 8rem;
      height: 8rem;
      background: rgba(255, 255, 255, 0.15);
      border-radius: 50%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      backdrop-filter: blur(10px);
    }

    .stat-circle .stat-number {
      font-size: 1.5rem;
      font-weight: bold;
    }

    .stat-circle .stat-label {
      font-size: 0.875rem;
      opacity: 0.8;
    }

    .platform-btn::part(base) {
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: white;
    }

    .platform-btn:hover::part(base) {
      background: rgba(255, 255, 255, 0.2);
    }

    /* Animations */
    @keyframes falling-rain {
      0% {
        transform: translateY(-10px);
        opacity: 0;
      }
      10% {
        opacity: 0.6;
      }
      90% {
        opacity: 0.6;
      }
      100% {
        transform: translateY(calc(100vh + 20px));
        opacity: 0;
      }
    }

    @keyframes gentle-sway {
      0%, 100% {
        transform: rotate(-3deg);
      }
      50% {
        transform: rotate(3deg);
      }
    }

    @keyframes float-notes {
      0%, 100% {
        transform: translateY(0) rotate(0deg);
      }
      25% {
        transform: translateY(-8px) rotate(5deg);
      }
      50% {
        transform: translateY(-12px) rotate(-3deg);
      }
      75% {
        transform: translateY(-6px) rotate(2deg);
      }
    }

    @keyframes steam-rise {
      0% {
        transform: translateY(0) scale(1);
        opacity: 0.8;
      }
      50% {
        transform: translateY(-15px) scale(1.2);
        opacity: 0.4;
      }
      100% {
        transform: translateY(-30px) scale(0.8);
        opacity: 0;
      }
    }

    @media (max-width: 768px) {
      .page-title {
        font-size: 2rem;
      }

      .header-stats {
        gap: 1.5rem;
      }

      .featured-content,
      .community-content {
        grid-template-columns: 1fr;
        gap: 2rem;
      }

      .programs-grid {
        grid-template-columns: 1fr;
      }

      .community-card {
        padding: 2rem;
      }

      .community-header {
        flex-direction: column;
        text-align: center;
      }

      .participation-stats {
        flex-direction: row;
        justify-content: center;
      }

      .stat-circle {
        width: 6rem;
        height: 6rem;
      }
    }
  </style>
</programs>
