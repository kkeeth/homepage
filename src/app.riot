<app>
  <div class="container">
    <router>
      <my-header>
        <nav slot="menu-nav" class="nav desktop-nav">
          <ul>
            <li each={page in state.pages}>
              <a
                class={this.state.activePage === page.componentName ? 'active' : '' }
                href={page.path}>{page.label}</a>
            </li>
          </ul>
        </nav>
        <button type="button" slot="menu-button" class="menu-toggle" onclick={ openMenu }>
          <sl-icon name="list" class="hamburger"></sl-icon>
        </button>
      </my-header>

      <sl-drawer placement="end" class="nav-drawer">
        <nav class="nav mobile-nav">
          <ul>
            <li each={page in state.pages}>
              <a
                class={this.state.activePage === page ? 'active' : '' }
                href={page.path}
                onclick={closeMenu}>{page.label}</a>
            </li>
          </ul>
        </nav>
        <social-links />
      </sl-drawer>

      <div if={state.showNotFound} class="row">
        <not-found />
      </div>

      <div if={!state.showNotFound} class="app">
        <route each={page in state.pages} path={page.path}>
          <main is={page.componentName} class="main-content" />
          <scroll-top />

          <my-footer />
        </route>
      </div>
    </router>
  </div>

  <script>
    import { Router, Route, route, router, toRegexp, match } from '@riotjs/route'
    import NotFound from '@/pages/not-found.riot'
    import pages from './pages'
    import Home from '@/pages/home.riot'
    import Programs from '@/pages/programs.riot'
    import Profile from '@/pages/profile.riot'
    import Contact from '@/pages/contact.riot'
    import i18nStore from '@/utils/i18n-store';

    export default {
      components : {
        Router,
        Route,
        NotFound,
        Home,
        Programs,
        Profile,
        Contact,
      },
      state: {
        pages,
        showNotFound: false,
        activePage: null,
      },
      onBeforeMount() {
        this.anyRouteStream = route('(.*)')
        this.anyRouteStream.on.value(this.onAnyRoute)

        router.on.value(async (path) => {
          await this.onAnyRoute(path)
        })
      },
      onAnyRoute(path) {
        if (!path.pathname) {
          return
        }
        const foundPage = pages.find(p => match(path.pathname, toRegexp(p.path)))
        const activePage = foundPage ? foundPage.componentName : null

        this.update({
          activePage,
          showNotFound: !activePage
        })
      },
      onMounted() {
        i18nStore.on('locale-changed', () => {
          this.update()
        })
      },
      onBeforeUnmount() {
        this.anyRouteStream.end()
      },
      openMenu() {
        this.$('.nav-drawer').show();
      },
      closeMenu() {
        this.$('.nav-drawer').hide();
      }
    }
  </script>

  <style>
    .main-content {
      margin: 0 auto;
    }

    .nav-drawer {
      margin-top: 100px;
    }

    .nav-drawer::part(body) {
      padding-top: 2rem;
      padding-left: 5rem;
    }

    .nav-drawer sl-icon {
      margin-right: 1rem;
      color: var(--primary-color);
    }

    .mobile-nav ul {
      padding: 0;
      margin: 0;
    }

    .mobile-nav ul li {
      list-style-type: none;
      margin-bottom: 2rem;
    }

    .mobile-nav ul li a {
      text-decoration: none;
      display: block;
      width: 100%;
      color: var(--text-color);
      font-size: 1.5rem;
      font-weight: 500;
      transition: color 0.3s ease;
    }

    .menu-toggle {
      display: flex;
      background: none;
      font-size: 2rem;
      color: var(--text-color);
      align-items: center;
    }

    @media (max-width: 768px) {
      .nav-drawer social-links {
        position: absolute;
        bottom: 2rem;
      }
    }
  </style>
</app>